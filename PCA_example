{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "np.set_printoptions(suppress=True,precision=4)\n",
    "\n",
    "from sklearn.decomposition import PCA\n",
    "\n",
    "df = pd.read_csv('mtcars.csv', header=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mpg</th>\n",
       "      <th>cyl</th>\n",
       "      <th>disp</th>\n",
       "      <th>hp</th>\n",
       "      <th>drat</th>\n",
       "      <th>wt</th>\n",
       "      <th>qsec</th>\n",
       "      <th>vs</th>\n",
       "      <th>am</th>\n",
       "      <th>gear</th>\n",
       "      <th>carb</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>21.0</td>\n",
       "      <td>6</td>\n",
       "      <td>160.0</td>\n",
       "      <td>110</td>\n",
       "      <td>3.90</td>\n",
       "      <td>2.620</td>\n",
       "      <td>16.46</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21.0</td>\n",
       "      <td>6</td>\n",
       "      <td>160.0</td>\n",
       "      <td>110</td>\n",
       "      <td>3.90</td>\n",
       "      <td>2.875</td>\n",
       "      <td>17.02</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>22.8</td>\n",
       "      <td>4</td>\n",
       "      <td>108.0</td>\n",
       "      <td>93</td>\n",
       "      <td>3.85</td>\n",
       "      <td>2.320</td>\n",
       "      <td>18.61</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>21.4</td>\n",
       "      <td>6</td>\n",
       "      <td>258.0</td>\n",
       "      <td>110</td>\n",
       "      <td>3.08</td>\n",
       "      <td>3.215</td>\n",
       "      <td>19.44</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>18.7</td>\n",
       "      <td>8</td>\n",
       "      <td>360.0</td>\n",
       "      <td>175</td>\n",
       "      <td>3.15</td>\n",
       "      <td>3.440</td>\n",
       "      <td>17.02</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  carb\n",
       "0  21.0    6  160.0  110  3.90  2.620  16.46   0   1     4     4\n",
       "1  21.0    6  160.0  110  3.90  2.875  17.02   0   1     4     4\n",
       "2  22.8    4  108.0   93  3.85  2.320  18.61   1   1     4     1\n",
       "3  21.4    6  258.0  110  3.08  3.215  19.44   1   0     3     1\n",
       "4  18.7    8  360.0  175  3.15  3.440  17.02   0   0     3     2"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()\n",
    "#ข้อมูลมีจำนวน 11 Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(32, 11)\n"
     ]
    }
   ],
   "source": [
    "# คำสั่ง .values จะทำการดึงข้อมูลที่ไม่ใช่ header ออกมา\n",
    "D = df.values\n",
    "\n",
    "print(D.shape)\n",
    "#ลบข้อมูลในแต่ละฟีเจอร์ด้วย mean ของฟีเจอร์นั้นๆ เพื่อปรับให้ค่า mean เป็น 0\n",
    "X = D - D.mean(axis=0, keepdims=True)\n",
    "\n",
    "# สเกลข้อมูลด้วย standard deviation \n",
    "X = X/D.std(axis=0,keepdims=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PCA(copy=True, iterated_power='auto', n_components=4, random_state=None,\n",
       "  svd_solver='auto', tol=0.0, whiten=False)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# กำหนดจำนวนของ PCs ได้ ในที่นี้กำหนดให้เป็น 4\n",
    "pca = PCA(n_components=4)\n",
    "# ทำการ fit ข้อมูล\n",
    "pca.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Principal components: \n",
      " [[ 0.3625  0.0161 -0.2257 -0.0225]\n",
      " [-0.3739  0.0437 -0.1753 -0.0026]\n",
      " [-0.3682 -0.0493 -0.0615  0.2566]\n",
      " [-0.3301  0.2488  0.14   -0.0677]\n",
      " [ 0.2942  0.2747  0.1612  0.8548]\n",
      " [-0.3461 -0.143   0.3418  0.2459]\n",
      " [ 0.2005 -0.4634  0.4032  0.0681]\n",
      " [ 0.3065 -0.2316  0.4288 -0.2148]\n",
      " [ 0.2349  0.4294 -0.2058 -0.0305]\n",
      " [ 0.2069  0.4623  0.2898 -0.2647]\n",
      " [-0.214   0.4136  0.5285 -0.1268]]\n"
     ]
    }
   ],
   "source": [
    "# คำสั่ง transform จะทำการแปลงข้อมูล Raw data ให้กลายเป็นข้อมูลทีถูกแปลง(ข้อมูลที่ถูกบิดนั้นเอง)\n",
    "X_pca = pca.transform(X)\n",
    "print(\"Principal components: \\n\", pca.components_.T)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "จะเห็นได้ว่าข้อมูลของเราจะมีจำนวน PC ทั้งหมด 4 อัน เนื่องจากเรากำหนดไว้ที่ n_components=4\n",
    "ซึ่งในแต่ละ PC จะมีจำนวนสมาชิกทั้งหมด 11 ตัว **มองตามแนวคอลัมน์**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Transformed data :\n",
      " [[ 0.6572  1.7354 -0.6012  0.1155]\n",
      " [ 0.6294  1.55   -0.3823  0.2023]\n",
      " [ 2.7794 -0.1465 -0.2412 -0.2491]\n",
      " [ 0.3118 -2.363  -0.1358 -0.5119]\n",
      " [-1.9745 -0.7544 -1.1344  0.0757]\n",
      " [ 0.0561 -2.786   0.1638 -0.9908]\n",
      " [-3.0027  0.3349 -0.3628 -0.0524]\n",
      " [ 2.0553 -1.4652  0.9439 -0.1444]\n",
      " [ 2.2874 -1.9835  1.7972  0.2918]\n",
      " [ 0.5264 -0.162   1.4928  0.0673]\n",
      " [ 0.5092 -0.3239  1.6836  0.0959]\n",
      " [-2.2478 -0.6835 -0.3754 -0.1319]\n",
      " [-2.0478 -0.6832 -0.4845 -0.2144]\n",
      " [-2.1485 -0.8017 -0.2951 -0.1781]\n",
      " [-3.8998 -0.8279  0.6473  0.2952]\n",
      " [-3.9541 -0.7334  0.7206  0.4118]\n",
      " [-3.593  -0.4211  0.5489  0.6763]\n",
      " [ 3.8563 -0.2968 -0.4228  0.0561]\n",
      " [ 4.254   0.6884 -0.2068  1.1862]\n",
      " [ 4.2342 -0.2793 -0.4663  0.1862]\n",
      " [ 1.9042 -2.1198  0.1568  0.0513]\n",
      " [-2.1849 -1.0142 -1.1688 -0.5943]\n",
      " [-1.8634 -0.9065 -0.9624  0.0058]\n",
      " [-2.889   0.6808 -0.1631  0.8274]\n",
      " [-2.2459 -0.8738 -1.0444  0.1488]\n",
      " [ 3.574  -0.1212 -0.4536 -0.0136]\n",
      " [ 2.6513  2.0464 -0.8303  0.5777]\n",
      " [ 3.3857  1.3786 -0.4539 -1.1716]\n",
      " [-1.373   3.5    -0.1365  0.5995]\n",
      " [ 0.001   3.2191  0.4021 -0.954 ]\n",
      " [-2.6691  4.3797  1.3529 -0.8914]\n",
      " [ 2.4206  0.2336  0.4118  0.2271]]\n"
     ]
    }
   ],
   "source": [
    "#แสดงข้อมูลจุดที่ถูกแปลงเรียบร้อยแล้ว\n",
    "print(\"Transformed data :\\n\", X_pca)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total variation explained : [0.6008 0.241  0.057  0.0245] = 92.32 %\n",
      "Original shape (#instances, #features):    (32, 11)\n",
      "Transformed shape (#instances, #features): (32, 4)\n"
     ]
    }
   ],
   "source": [
    "exp_var = pca.explained_variance_ratio_\n",
    "print(\"Total variation explained : {0} = {1:.2f} %\".format(exp_var, sum(pca.explained_variance_ratio_*100)))\n",
    "print(\"Original shape (#instances, #features):   \", X.shape)\n",
    "print(\"Transformed shape (#instances, #features):\", X_pca.shape)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
